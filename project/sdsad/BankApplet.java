import javax.swing.*;

import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author js595
 */
@SuppressWarnings("serial")
public class BankApplet extends JApplet {

	/**
	 * Creates new form AtmApplet1
	 * 
	 * @return
	 */

	public void callApplet(Container rootPane) {
		this.rootPane = rootPane;
		initComponents();
		try {
			for (UIManager.LookAndFeelInfo info : UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		initComponents();
	}

	public void init() {
		try {
			for (UIManager.LookAndFeelInfo info : UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(BankApplet.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	private void initComponents() {

		Jframe1 = new JFrame();

		initLoginPanel();
		Jframe1.add(jPanel1);
		Jframe1.pack();

	}

	private void initLoginPanel() {

		new JFileChooser();
		jPanel1 = new JPanel();
		jComboBox1 = new JComboBox();
		jLabel2 = new JLabel();
		jLabel3 = new JLabel();
		jTextField1 = new JTextField();
		jPasswordField1 = new JPasswordField();
		jButton1 = new JButton();
		jLabel1 = new JLabel();
		jButton2 = new JButton();
		jTextArea1 = new JTextArea();
		Jframe1.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		jPanel1.setBackground(new java.awt.Color(255, 204, 102));
		jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(
				0, 0, 0), 1, true));

		jComboBox1.setModel(new DefaultComboBoxModel(new String[] { "Customer",
				"Representative" }));
		jComboBox1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(51, 102, 255));
		jLabel2.setText("User Name");

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
		jLabel3.setForeground(new java.awt.Color(51, 102, 255));
		jLabel3.setText("Password");

		jTextField1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		jButton1.setBackground(new java.awt.Color(204, 204, 204));
		jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		jButton1.setForeground(new java.awt.Color(51, 102, 255));
		jButton1.setText("Sign In");
		jButton1.setBorder(new javax.swing.border.SoftBevelBorder(
				javax.swing.border.BevelBorder.RAISED));
		jButton1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(51, 102, 255));
		jLabel1.setText("Sign in");

		jButton2.setBackground(new java.awt.Color(204, 204, 204));
		jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		jButton2.setForeground(new java.awt.Color(51, 102, 255));
		jButton2.setText("Sign Up");
		jButton2.setBorder(new javax.swing.border.SoftBevelBorder(
				javax.swing.border.BevelBorder.RAISED));

		jButton2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jTextArea1.setColumns(10);
		jTextArea1.setRows(5);

		GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																GroupLayout.Alignment.LEADING)
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addGap(54,
																				54,
																				54)
																		.addComponent(
																				jLabel1,
																				GroupLayout.PREFERRED_SIZE,
																				81,
																				GroupLayout.PREFERRED_SIZE))
														.addGroup(
																GroupLayout.Alignment.TRAILING,
																jPanel1Layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addGroup(
																				jPanel1Layout
																						.createParallelGroup(
																								GroupLayout.Alignment.LEADING,
																								false)
																						.addComponent(
																								jLabel2,
																								GroupLayout.DEFAULT_SIZE,
																								81,
																								Short.MAX_VALUE)
																						.addComponent(
																								jLabel3,
																								GroupLayout.DEFAULT_SIZE,
																								81,
																								Short.MAX_VALUE)
																						.addComponent(
																								jButton2,
																								GroupLayout.DEFAULT_SIZE,
																								GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))))
										.addGap(25, 25, 25)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																jComboBox1,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jTextField1,
																GroupLayout.DEFAULT_SIZE,
																110,
																Short.MAX_VALUE)
														.addComponent(
																jPasswordField1)
														.addComponent(
																jButton1,
																GroupLayout.PREFERRED_SIZE,
																94,
																GroupLayout.PREFERRED_SIZE)
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addComponent(
																				jTextArea1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				200,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(16,
																				16,
																				16)))
										.addContainerGap(598, Short.MAX_VALUE)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGap(33, 33, 33)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(
																jComboBox1,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel1))
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel2,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jTextField1,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel3,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPasswordField1,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jButton1)
														.addComponent(jButton2))
										.addGap(18, 18, 18)
										.addComponent(
												jTextArea1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												57,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(394, 394, 394)));

		layoutManage();
		layout.setHorizontalGroup(layout.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE,
								GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE,
								GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));

		Jframe1.pack();
		jTextArea1.setVisible(false);
		jTextArea1.setEditable(false);
	}// </editor-fold>

	private void layoutManage() {
		// TODO Auto-generated method stub
		if (rootPane != null) {
			layout = new GroupLayout(rootPane);
			rootPane.setLayout(layout);
		} else {
			layout = new GroupLayout(getContentPane());
			getContentPane().setLayout(layout);
		}
	}

	private void jButton1ActionPerformed(ActionEvent evt) {

		try {
			// get input data for sending
			String userid = jTextField1.getText();
			if (userid.isEmpty()) {
				jTextArea1.setText("Message: Enter User ID");
				jTextArea1.setVisible(true);
				return;
			}
			@SuppressWarnings("deprecation")
			String pwd = jPasswordField1.getText();

			if (pwd.isEmpty()) {
				jTextArea1.setText("Message: Enter User Password");
				jTextArea1.setVisible(true);
				return;
			}

			String lv_subrc = "0";
			// DBFetch(userid , pwd);

			if (lv_subrc == "0") {
				if (rootPane != null) {
					rootPane.removeAll();
					new AccountView1(rootPane);
					this.repaint();
				} else {
					this.getContentPane().removeAll();
					new AccountView1(this.getContentPane());
					this.repaint();

				}

			} else {
				jTextArea1.setText("Invalid Credentials");
				jTextArea1.setVisible(true);
			}

		} catch (Exception ex) {
			ex.printStackTrace();

		}

	}

	public String DBFetch(String usid, String pwd) {
		// TODO Auto-generated method stub

		String url = "jdbc:mysql://sql2.njit.edu:3306/js595";
		String lv_subrc = null;

		Connection connection = null;
		Statement statement = null;
		ResultSet rs = null;

		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			connection = DriverManager.getConnection(url, "js595", "q5uX7be5");
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			statement = connection.createStatement();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			rs = statement
					.executeQuery("SELECT * FROM 'Login'  WHERE 'email_id' = "
							+ usid + "AND password =" + pwd);

		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		try {
			while (rs.next()) {
				lv_subrc = "0";

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			rs.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return lv_subrc;

	}

	private void jTextField1ActionPerformed(ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jComboBox1ActionPerformed(ActionEvent evt) {
		// TODO add your handling code here:

	}

	private void jButton2ActionPerformed(ActionEvent evt) {
		// TODO add your handling code here:

		if (rootPane != null) {
			rootPane.removeAll();
			new RegistrationPage1(rootPane);
			this.repaint();
		} else {
			this.getContentPane().removeAll();
			new RegistrationPage1(this.getContentPane());
			this.repaint();
		}

	}

	/**
	 * Get a connection to the servlet.
	 */
	private URLConnection getServletConnection() throws MalformedURLException,
			IOException {

		String loginType = (String) jComboBox1.getSelectedItem();

		URL urlServlet = new URL("http://localhost:8080/login?usid="
				+ jTextField1.getText() + "?pwd=" + jPasswordField1.getText()
				+ "?type=" + loginType);
		URLConnection con = urlServlet.openConnection();

		con.setDoInput(true);
		con.setDoOutput(true);
		con.setUseCaches(false);
		con.setRequestProperty("Content-Type",
				"application/x-java-serialized-object");

		return con;
	}

	/**
	 * @param args
	 *            the command line arguments
	 */

	// Variables declaration - do not modify
	private JButton jButton1;
	private JButton jButton2;
	private JComboBox jComboBox1;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private JLabel jLabel3;
	private JPanel jPanel1;
	private JPasswordField jPasswordField1;
	private JTextField jTextField1;
	private JTextArea jTextArea1;
	private JFrame Jframe1;
	private Container rootPane;
	GroupLayout layout;
	// End of variables declaration
}
